# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '发票.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

import pyperclip
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
import xlrd
import xlwt

from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from xlutils.copy import copy
import pandas as pd
import datetime
import time


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.formLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.formLayoutWidget.setGeometry(QtCore.QRect(150, 230, 601, 101))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setLabelAlignment(QtCore.Qt.AlignCenter)
        self.formLayout.setFormAlignment(QtCore.Qt.AlignBottom | QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.label = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.label_2 = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.comboBox = QtWidgets.QComboBox(self.formLayoutWidget)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.comboBox)
        self.lineEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit)
        self.pushButton = QtWidgets.QPushButton(self.formLayoutWidget)
        self.pushButton.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setMaximumSize(QtCore.QSize(75, 16777215))
        self.pushButton.setObjectName("pushButton")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.formLayoutWidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.pushButton_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "请输入订单号"))
        self.label_2.setText(_translate("MainWindow", "所在sheet 名称"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Sheet1"))
        self.comboBox.setItemText(1, _translate("MainWindow", "8月"))
        self.comboBox.setItemText(2, _translate("MainWindow", "9月"))
        self.comboBox.setItemText(3, _translate("MainWindow", "10月"))
        self.comboBox.setItemText(4, _translate("MainWindow", "11月"))
        self.comboBox.setItemText(5, _translate("MainWindow", "12月"))
        self.pushButton.setText(_translate("MainWindow", "生成发票"))
        self.pushButton_2.setText(_translate("MainWindow", "录入共享表格"))


class MainWindow(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        QtWidgets.QMainWindow.__init__(self, parent=parent)
        self.setupUi(self)
        self.pushButton.clicked.connect(self.make_excel)
        self.pushButton_2.clicked.connect(self.input_data)

    def get_info(self):
        sample_file = '发票模板.xls'
        sheet_name = self.comboBox.currentText()
        order_no = self.lineEdit.text()
        data = pd.read_excel('客户跟进情况.xlsx', sheet_name=sheet_name)
        data1 = data[data['订单号'] == order_no]
        name = data1['全名'].tolist()[0]
        in_add = data1['地址'].tolist()[0]
        in_cty = data1['城市'].tolist()[0]
        in_post = str(data1['邮编'].tolist()[0])
        in_phno = data1['电话'].tolist()[0]
        in_item = data1['型号'].tolist()[0]
        # in_country='United States'
        in_dt = datetime.date.today().strftime('%Y/%m/%d')
        return sample_file, sheet_name, order_no, name, in_add, in_cty, in_post, in_phno, in_item, in_dt

    def input_data(self):
        k = self.get_info()
        in_dt = k[-1]
        order_no = k[2]
        name = k[3]
        in_add = k[4]
        in_post = k[6]
        in_phno = k[7]
        in_item = k[8]
        from selenium import webdriver

        driver = webdriver.Chrome()
        driver.get('https://docs.qq.com/sheet/DZkhJZENGc25xaGt6')
        driver.find_element(By.ID, 'blankpage-button-pc').click()
        time.sleep(3)
        driver.find_element(By.ID, 'qq-tabs-title').click()
        time.sleep(1)
        driver.switch_to.frame("login_frame")
        time.sleep(3)
        driver.find_element(By.ID, 'img_out_3587869460').click()
        time.sleep(3)
        driver.switch_to.parent_frame()
        time.sleep(3)
        while driver.find_element(By.ID, 'alloy-simple-text-editor').text != '':
            ActionChains(driver).send_keys(Keys.CONTROL, Keys.LEFT).perform()
            ActionChains(driver).send_keys(Keys.CONTROL, Keys.DOWN).perform()

        a = [
            in_dt,
            '亚马逊老店铺',
            '''
            定制LOGO
            相关订单:{}
            '''.format(order_no),
            '美国',
            '''
            收件人:{}
            地址:{}
            邮编:{}
            联系电话:{}
            '''.format(name, in_add, in_post, in_phno),
            '''
        {}定制LOGO
        (只要LOGO)
            '''.format(in_item),
            '1个'
        ]
        for i in range(7):
            if i in [0, 1, 3, 6]:
                ActionChains(driver).send_keys(a[i]).perform()
                ActionChains(driver).send_keys(Keys.RIGHT).perform()
            else:
                pyperclip.copy(a[i])
                driver.find_element(By.ID, 'alloy-simple-text-editor').send_keys(Keys.CONTROL, 'v')
                ActionChains(driver).send_keys(Keys.TAB).perform()
        time.sleep(10)
        driver.close()

    def make_excel(self):
        k = self.get_info()
        sample_file = k[0]
        sheet_name = k[1]
        in_dt = k[-1]
        order_no = k[2]
        name = k[3]
        in_add = k[4]
        in_cty = k[5]
        in_post = k[6]
        in_phno = k[7]
        in_item = k[8]

        # sample_file = '发票模板.xls'
        # sheet_name = self.comboBox.currentText()
        # order_no = self.lineEdit.text()
        # data = pd.read_excel('客户跟进情况.xlsx', sheet_name=sheet_name)
        # data1 = data[data['订单号'] == order_no]
        #
        # name = data1['全名'].tolist()[0]
        # in_add = data1['地址'].tolist()[0]
        # in_cty = data1['城市'].tolist()[0]
        # in_post = str(data1['邮编'].tolist()[0])
        # in_phno = data1['电话'].tolist()[0]
        # # in_country='United States'
        # in_dt = datetime.date.today().strftime('%Y/%m/%d')
        invoice_no = str(order_no) + '-LG'
        # width = 256 * 8
        font = xlwt.Font()
        font.height = 240  # 12号字体
        font.bold = False
        font.name = 'Arial'
        align = xlwt.Alignment()
        style = xlwt.XFStyle()
        style.font = font
        align.vert = 0
        style.alignment = align
        inv = invoice_no + '发票.xls'
        data = xlrd.open_workbook(sample_file, formatting_info=True)
        new_excel = copy(data)
        ws = new_excel.get_sheet(0)  # 获取第一个sheet
        # first_col = ws.col(0)            # 第一列
        # first_col.width=width            # 第一列宽
        ws.write(2, 1, invoice_no, style)
        ws.write(2, 3, invoice_no, style)  # B8(7,1)
        ws.write(4, 6, name, style)  # F9(8,5)
        ws.write(2, 8, in_dt, style)
        ws.write(10, 6, name, style)
        ws.write(5, 6, in_add, style)
        ws.write(7, 6, in_cty, style)
        ws.write(6, 6, in_post, style)
        ws.write(11, 6, in_phno, style)
        new_excel.save(inv)


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = MainWindow()
    MainWindow.show()
    sys.exit(app.exec_())
